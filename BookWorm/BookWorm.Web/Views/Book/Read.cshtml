@model BookReadViewModel
@{
    ViewData["Title"] = $"Read {Model.Title}";
}

<h2 class="text-center">@ViewData["Title"]</h2>
<hr />

@{
    int previousPage = Model.CurrentPage - 1;
    int nextPage = Model.CurrentPage + 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    Model.TotalPages = Model.Poems.Count();
    Model.CurrentPoem = Model.Poems[Model.CurrentPage - 1];

}

<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
   asp-controller="Book"
   asp-action="Read"
   asp-area=""
   asp-route-currentPage="@previousPage">
    Previous
</a>

<a class="btn btn-primary @(Model.CurrentPage == Model.TotalPages ? "disabled" : string.Empty)"
   asp-controller="Book"
   asp-action="Read"
   asp-area=""
   asp-route-currentPage="@nextPage">
    Next
</a>

<h3 class="text-center">@Model.CurrentPoem.Title</h3>
@foreach (string lyric in Model.CurrentPoem.ReadableContent)
{
    <p>@lyric</p>
}

<div class="row mt-3">
    <div class="col-8 offset-2">
        <hr />
        <div>
            <h3 class="text-center">
                Reviews:
            </h3>
        </div>

        @if (Model.Reviews == null)
        {
            <p>No review yet!</p>
        }

         @{
            int likeBtnIdCounter = 1;
            int dislikeBtnIdCounter = 1;
            int likesIdCounter = 1;
        }
        <div class="accordion" id="reviewAccordion">
            @foreach (ReviewDisplayViewModel review in Model.Reviews!)
            {
                <div class="accordion-item">
                    <h2 class="accordion-header" id="@review.Title">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#id_@review.Id" aria-expanded="true" aria-controls="id_@review.Id">
                            @review.Title
                        </button>
                    </h2>
                    <div id="id_@review.Id" class="accordion-collapse collapse" aria-labelledby="@review.Title" data-bs-parent="#reviewAccordion">
                        <div class="accordion-body">
                            @review.Content
                        </div>

                        @{
                            string likeBtnId = $"likeBtn{likeBtnIdCounter++}";
                            string dislikeBtnId = $"dislikeBtn{dislikeBtnIdCounter++}";
                            string likesId = $"likes{likesIdCounter++}";
                            string reviewId = review.Id.ToString();
                        }
                        <div>
                            <button id="@likeBtnId" class="btn btn-success upvote" onclick="likeButton('@likeBtnId', '@dislikeBtnId', '@likesId', '@reviewId')">
                                Like
                            </button>
                            <button id=@dislikeBtnId class="btn btn-danger downvote" onclick="dislikeButton('@likeBtnId', '@dislikeBtnId', '@likesId', '@reviewId')">
                                Dislike
                            </button>
                            <p id=@likesId>@(review.Upvotes - review.Downvotes)</p>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>